/*
Deployment script for WORK_FLOW

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "WORK_FLOW"
:setvar DefaultFilePrefix "WORK_FLOW"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL14.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL14.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[EMPLOYEE]...';


GO
CREATE TABLE [dbo].[EMPLOYEE] (
    [EMP_ID]     INT          IDENTITY (1, 1) NOT NULL,
    [USER_ROLE]  INT          NULL,
    [ORGN_ID]    INT          NULL,
    [FIRST_NAME] VARCHAR (50) NULL,
    [LAST_NAME]  VARCHAR (50) NULL,
    [CONTACT]    NCHAR (10)   NULL,
    [USER_NAME]  VARCHAR (50) NULL,
    [PASSWORD]   VARCHAR (50) NULL,
    [STATUS]     INT          NULL,
    PRIMARY KEY CLUSTERED ([EMP_ID] ASC)
);


GO
PRINT N'Creating [dbo].[ENTITY_EMPLOYEE]...';


GO
CREATE TABLE [dbo].[ENTITY_EMPLOYEE] (
    [EE_ID]     INT        IDENTITY (1, 1) NOT NULL,
    [ENTITY_ID] INT        NULL,
    [EMP_ID]    INT        NULL,
    [STATUS]    INT        NULL,
    [REMARK]    NCHAR (10) NULL,
    PRIMARY KEY CLUSTERED ([EE_ID] ASC)
);


GO
PRINT N'Creating [dbo].[ENTITY_WORK]...';


GO
CREATE TABLE [dbo].[ENTITY_WORK] (
    [EW_WORK]     INT          IDENTITY (1, 1) NOT NULL,
    [WF_ID]       INT          NULL,
    [ENTITY_NAME] VARCHAR (50) NULL,
    [REMARK]      VARCHAR (50) NULL,
    [ASSIGN_DATE] DATE         NULL,
    [END_DATE]    DATE         NULL,
    [STATUS]      INT          NULL,
    PRIMARY KEY CLUSTERED ([EW_WORK] ASC)
);


GO
PRINT N'Creating [dbo].[ORGANIZATION]...';


GO
CREATE TABLE [dbo].[ORGANIZATION] (
    [ORG_ID]       INT          IDENTITY (1, 1) NOT NULL,
    [ORGANIZATION] VARCHAR (50) NULL,
    [ADR1]         VARCHAR (50) NULL,
    [ADR2]         VARCHAR (50) NULL,
    [CITY]         VARCHAR (50) NULL,
    [CONTATC]      NCHAR (10)   NULL,
    PRIMARY KEY CLUSTERED ([ORG_ID] ASC)
);


GO
PRINT N'Creating [dbo].[STATUS]...';


GO
CREATE TABLE [dbo].[STATUS] (
    [STATUS_ID] INT          IDENTITY (1, 1) NOT NULL,
    [TYPE]      NCHAR (10)   NULL,
    [STATUS]    VARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([STATUS_ID] ASC)
);


GO
PRINT N'Creating [dbo].[USER_LOGIN]...';


GO
CREATE TABLE [dbo].[USER_LOGIN] (
    [USER_ROLE_ID] INT            IDENTITY (1, 1) NOT NULL,
    [USER_ROLE]    VARBINARY (50) NULL,
    PRIMARY KEY CLUSTERED ([USER_ROLE_ID] ASC)
);


GO
PRINT N'Creating [dbo].[WORK_FLOW]...';


GO
CREATE TABLE [dbo].[WORK_FLOW] (
    [WF_ID]       INT          IDENTITY (1, 1) NOT NULL,
    [WF_NAME]     VARCHAR (50) NULL,
    [STATUS]      INT          NULL,
    [CREATE_DATE] DATE         NULL,
    [END_DATE]    DATE         NULL,
    PRIMARY KEY CLUSTERED ([WF_ID] ASC)
);


GO
PRINT N'Creating [dbo].[WORKFLOW_MANAGER]...';


GO
CREATE TABLE [dbo].[WORKFLOW_MANAGER] (
    [WB_ID]     INT          IDENTITY (1, 1) NOT NULL,
    [WORK_FLOW] INT          NULL,
    [MANAGER]   INT          NOT NULL,
    [STATUS]    INT          NULL,
    [REMARK]    VARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([WB_ID] ASC)
);


GO
PRINT N'Creating [dbo].[FK_EMPLOYEE_ROLE]...';


GO
ALTER TABLE [dbo].[EMPLOYEE]
    ADD CONSTRAINT [FK_EMPLOYEE_ROLE] FOREIGN KEY ([USER_ROLE]) REFERENCES [dbo].[USER_LOGIN] ([USER_ROLE_ID]);


GO
PRINT N'Creating [dbo].[FK_EMPLOYEE_ORGN]...';


GO
ALTER TABLE [dbo].[EMPLOYEE]
    ADD CONSTRAINT [FK_EMPLOYEE_ORGN] FOREIGN KEY ([ORGN_ID]) REFERENCES [dbo].[ORGANIZATION] ([ORG_ID]);


GO
PRINT N'Creating [dbo].[FK_EMPLOYEE_STATUS]...';


GO
ALTER TABLE [dbo].[EMPLOYEE]
    ADD CONSTRAINT [FK_EMPLOYEE_STATUS] FOREIGN KEY ([STATUS]) REFERENCES [dbo].[STATUS] ([STATUS_ID]);


GO
PRINT N'Creating [dbo].[FK_ENTITY_EMPLOYEE_ENTITY]...';


GO
ALTER TABLE [dbo].[ENTITY_EMPLOYEE]
    ADD CONSTRAINT [FK_ENTITY_EMPLOYEE_ENTITY] FOREIGN KEY ([ENTITY_ID]) REFERENCES [dbo].[ENTITY_WORK] ([EW_WORK]);


GO
PRINT N'Creating [dbo].[FK_ENTITY_EMPLOYEE_EMP]...';


GO
ALTER TABLE [dbo].[ENTITY_EMPLOYEE]
    ADD CONSTRAINT [FK_ENTITY_EMPLOYEE_EMP] FOREIGN KEY ([EMP_ID]) REFERENCES [dbo].[EMPLOYEE] ([EMP_ID]);


GO
PRINT N'Creating [dbo].[FK_ENTITY_EMPLOYEE_STATUS]...';


GO
ALTER TABLE [dbo].[ENTITY_EMPLOYEE]
    ADD CONSTRAINT [FK_ENTITY_EMPLOYEE_STATUS] FOREIGN KEY ([STATUS]) REFERENCES [dbo].[STATUS] ([STATUS_ID]);


GO
PRINT N'Creating [dbo].[FK_ENTITY_WORK_WF]...';


GO
ALTER TABLE [dbo].[ENTITY_WORK]
    ADD CONSTRAINT [FK_ENTITY_WORK_WF] FOREIGN KEY ([WF_ID]) REFERENCES [dbo].[WORK_FLOW] ([WF_ID]);


GO
PRINT N'Creating [dbo].[FK_ENTITY_WORK_STATUS]...';


GO
ALTER TABLE [dbo].[ENTITY_WORK]
    ADD CONSTRAINT [FK_ENTITY_WORK_STATUS] FOREIGN KEY ([STATUS]) REFERENCES [dbo].[STATUS] ([STATUS_ID]);


GO
PRINT N'Creating [dbo].[FK_WORK_FLOW_STATUS]...';


GO
ALTER TABLE [dbo].[WORK_FLOW]
    ADD CONSTRAINT [FK_WORK_FLOW_STATUS] FOREIGN KEY ([STATUS]) REFERENCES [dbo].[STATUS] ([STATUS_ID]);


GO
PRINT N'Creating [dbo].[FK_WORKFLOW_MANAGER_WF]...';


GO
ALTER TABLE [dbo].[WORKFLOW_MANAGER]
    ADD CONSTRAINT [FK_WORKFLOW_MANAGER_WF] FOREIGN KEY ([WORK_FLOW]) REFERENCES [dbo].[WORK_FLOW] ([WF_ID]);


GO
PRINT N'Creating [dbo].[FK_WORKFLOW_MANAGER_MANAGER]...';


GO
ALTER TABLE [dbo].[WORKFLOW_MANAGER]
    ADD CONSTRAINT [FK_WORKFLOW_MANAGER_MANAGER] FOREIGN KEY ([MANAGER]) REFERENCES [dbo].[EMPLOYEE] ([EMP_ID]);


GO
PRINT N'Creating [dbo].[FK_WORKFLOW_MANAGER_STATUS]...';


GO
ALTER TABLE [dbo].[WORKFLOW_MANAGER]
    ADD CONSTRAINT [FK_WORKFLOW_MANAGER_STATUS] FOREIGN KEY ([STATUS]) REFERENCES [dbo].[STATUS] ([STATUS_ID]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '4152a2c7-a3d7-4047-89d3-944b6d9b2b5d')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('4152a2c7-a3d7-4047-89d3-944b6d9b2b5d')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'dcd2ac68-f481-4f3c-9179-3d0f6b14fdd7')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('dcd2ac68-f481-4f3c-9179-3d0f6b14fdd7')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '11656cf4-b075-4eea-8c08-482ff1e61840')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('11656cf4-b075-4eea-8c08-482ff1e61840')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'd7e6d0a6-1204-47ee-a180-eb81b666546e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('d7e6d0a6-1204-47ee-a180-eb81b666546e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '1b6daf43-7138-4ebc-b331-7058d0a556b9')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('1b6daf43-7138-4ebc-b331-7058d0a556b9')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '624d0334-1761-4a64-8ae6-a4092e9b7459')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('624d0334-1761-4a64-8ae6-a4092e9b7459')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '03e06619-6cf9-4dec-9398-12fd5dc988c4')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('03e06619-6cf9-4dec-9398-12fd5dc988c4')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '16843ee5-e6cb-40bc-a78b-2fbbc1abbd10')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('16843ee5-e6cb-40bc-a78b-2fbbc1abbd10')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '86e29807-5d7a-4601-a884-c1d05bfbf501')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('86e29807-5d7a-4601-a884-c1d05bfbf501')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'd365272b-7bca-4332-a067-d66af41075ab')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('d365272b-7bca-4332-a067-d66af41075ab')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '0db7feeb-368b-41c9-a3f8-198bce1b2f41')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('0db7feeb-368b-41c9-a3f8-198bce1b2f41')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '09d1f71e-7cf6-43b0-826c-a222e75cb83a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('09d1f71e-7cf6-43b0-826c-a222e75cb83a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '982e46d9-0ce5-4670-ad33-760949b31e7e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('982e46d9-0ce5-4670-ad33-760949b31e7e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '2a46ce11-530e-4919-840c-1e3f369fae52')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('2a46ce11-530e-4919-840c-1e3f369fae52')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '84581643-131b-4f7b-a69d-595790d115a7')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('84581643-131b-4f7b-a69d-595790d115a7')

GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
